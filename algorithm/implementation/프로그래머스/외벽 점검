# https://school.programmers.co.kr/learn/courses/30/lessons/60062

from itertools import permutations

def solution(n, weak, dist):
    length = len(weak)
    # 위치 2배로 늘려 일자형태로
    for i in range(length):
        weak.append(weak[i] + n)
    
    # 친구의 최솟값을 찾아야 하므로, 친구 수+1 로 초기화
    answer = len(dist) + 1
    
    # 0부터 length-1 까지의 위치를 각각 시작점으로 설정
    for start in range(length):
        for friends in list(permutations(dist, len(dist))):
            count = 1       # 투입할 친구의 수
            # 해당 친구가 점검할 수 있는 마지막 위치
            position = weak[start] + friends[count-1]
            for index in range(start, start + length):
                # 점검할 수 있는 위치를 벗어나는 경우
                if position < weak[index]:
                    count += 1      # 새로운 친구를 투입
                    if count > len(dist):   # 더 투입이 불가능하다면
                        break
                    position = weak[index] + friends[count-1]
                
            answer = min(count, answer)
    
    if answer > len(dist):
        return -1
    
    return answer
