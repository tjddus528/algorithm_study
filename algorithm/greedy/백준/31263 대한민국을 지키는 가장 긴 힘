# 내 풀이
n = int(input())
s = input()

# 해당 숫자로 파악할 수 있는 병사의 최솟값을 저정하는 리스트
d = [0] * (n+1)
d[0] = 1

# 한 병사의 전역일을 계산하기 위한 변수
number = int(s[0])
# 이전 병사의 전역일을 계산하기 위한 변수
prev = number
for i in range(1, n):

    number = number * 10 + int(s[i])

    # 조건을 만족하는 경우 다음 병사로 넘어갈 필요 없음
    if 1 <= number <= 641:
        d[i] = d[i-1]
    # 조건을 만족하지 않으면 다음 병사의 전역일 계산으로 넘어감
    else:
        # 만약 해당 숫자가 0이라면
        if int(s[i]) == 0:
            # 0이 아닐때까지 앞으로 거슬러 올라감
            temp = 1
            for j in range(i, 0, -1):
                if int(s[j]) == 0:
                    temp = temp * 10
                else:
                    temp = temp * int(s[j])
                    break
            # 거슬러 올라가 계산된 숫자를 이전 병사의 전역일로 저장
            prev = temp
        # 해당 숫자가 0이 아니라면
        else:
            # 그냥 그 숫자를 이전 병사의 전역일로 저장
            prev = int(s[i])
        # 병사의 숫자를 카운팅 + 1
        d[i] = d[i - 1] + 1
        number = prev

print(d[n-1])


# 다른 풀이
n=int(input())
s=input()
INF = 987654321
dp=[[INF,INF,INF] for _ in range(n)]
dp[0]=[1,INF,INF]
if n>1 and s[1] == '0':
    dp[1]=[INF,1,INF]
elif n>1 and s[1] != '0':
    dp[1]=[2,1,INF]
for i in range(2, n):
    # 한자리만
    if s[i] != '0':
        dp[i][0]=min(dp[i-1])+1
    if s[i-1] != '0':
        dp[i][1]=dp[i-1][0]
    if s[i-2] != '0' and int(s[i-2:i+1]) <= 641:
        dp[i][2]=dp[i-2][0]
print(min(dp[n-1]))
