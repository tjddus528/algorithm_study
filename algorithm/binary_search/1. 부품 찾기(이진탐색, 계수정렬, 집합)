# 이진 탐색
n = int(input())
array = list(map(int, input().split()))
array.sort()        # 이진 탐색을 위해 사전에 정렬 수행!!
m = int(input())
data = list(map(int, input().split()))

def binary_search(array, target, start, end):
    if start > end:
        return None
    mid = (start + end) // 2
    if array[mid] == target:
        return mid
    elif array[mid] > target:
        return binary_search(array, target, start, mid - 1)
    else:
        return binary_search(array, target, mid + 1, end)

for i in data:
    if binary_search(array, int(i), 0, n-1) == None:
        print("no", end=' ')
    else:
        print("yes", end= ' ')


# 계수 정렬
n = int(input())
array = [0] * 1000001
for i in input().split():
    array[int(i)] = 1

m = int(input())
data = list(map(int, input().split()))

for i in data:
    if array[i] > 0:
        print('yes', end = ' ')
    else:
        print('no', end = ' ')


# 집합 자료형 이용
# 특정한 수가 한 번이라도 등장했는지 검사하면 되므로 집합 자료형을 이용할 수 있다
# set()함수는 집합 자료형을 초기화할 때 사용
n = int(input())
array = set(map(int, input().split()))
m = int(input())
data = list(map(int, input().split()))

for i in data:
    if i in array:
        print('yes', end = ' ')
    else:
        print('no', end = ' ')

